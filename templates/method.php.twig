{# 
    This file is part of the CloudStack Client Generator.
    
    (c) Quentin Plepl√© <quentin.pleple@gmail.com>
    
    For the full copyright and license information, please view the LICENSE
    file that was distributed with this source code.
#}
{% autoescape false %}
{% set camelCase = config.use_camel_case %}
    /**
     * {% filter wordwrapStd(80, "\n     * ", true) %}{{ method.description | raw }}{{ "\n" }}{% endfilter %}
     *
{# document all required paramaters #}
{% for param in method.params %}
{% if param.required == "true" %}
     * @param string ${% if camelCase %}{{ param.nameCamelCase }}{% else %}{{ param.name }}{% endif %} {% filter wordwrapStd(80, "\n     * ", true) %}{{ param.description | raw }}{{ "\n" }}{% endfilter %}
{% endif %}
{% endfor %}
{# end required paramaters #}
{% if method.optional > 0 %}
     * @param array  $optArgs {
{# document all optional paramaters #}
{% for param in method.params %}
{% if param.required == "false" %}
     *     @type string ${% if camelCase %}{{ param.nameCamelCase }}{% else %}{{ param.name }}{% endif %} {% filter wordwrapStd(80, "\n     *     ", true) %}{{ param.description | raw }}{{ "\n" }}{% endfilter %}
{% endif %}
{% endfor %}
{# end optional arguments #}
     * }
{% endif %}
     */
    public function {{ method.name }}({# only define required paramaters in function #}
{% set count = 1 %}
{% for param in method.params %}
{% if param.required == "true" %}
{% if camelCase %}${{ param.nameCamelCase }}{% else %}{{ param.name }}{% endif %}{% if count < method.required %}{{ ", " }}{% endif %}{% endif %}
{% set count = count + 1 %}
{% endfor %}
{# end required #}
{# append optional arguments if needed #}
{% if method.optional > 0 %}{% if method.required > 0 %}, {% endif %}array $optArgs = array(){% endif %}) {
{# generate required paramager checks #}
{% for param in method.params %}
{% if param.required == "true" %}
        if (empty(${% if camelCase %}{{ param.nameCamelCase }}{% else %}{{ param.name }}{% endif %})) {
            throw new CloudStackClientException(sprintf(MISSING_ARGUMENT_MSG, "{% if camelCase %}{{ param.nameCamelCase }}{% else %}{{ param.name }}{% endif %}"), MISSING_ARGUMENT);
        }
{% endif %}
{% endfor %}
{# end paramater checks #}
        return $this->request("{{ method.name }}",
{% if (method.optional > 0) and (method.required > 0) %}
{# generate return array merge of required and optional paramaters #}
            array_merge(array(
{% elseif method.required > 0 %}
{# no merge ... just a simple array #}
            array(
{% else %}
{# no merge ... no array ... only optional arguments here #}
            $optArgs
{% endif %}
{% set count = 1 %}
{% for param in method.params %}
{% if param.required == "true" %}
                '{{ param.name }}' => ${% if camelCase %}{{ param.nameCamelCase }}{% else %}{{ param.name }}{% endif %}
{# determine line ending based on count #}
{% if count < method.required %}{{ ",\n" }}{% else %}{{ "\n" }}{% endif %}
{% set count = count + 1 %}
{% endif %}
{% endfor %}
{% if (method.optional > 0) and (method.required > 0) %}
{# generate return array merge of required and optional paramaters #}
            ), $optArgs)
{% elseif method.required > 0 %}
{# no merge ... just close array #}
            )
{% else %}
{# nothing here #}
{% endif %}
        );
    }
{% endautoescape %}
